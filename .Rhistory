library(datasets)  # Load/unload base packages manually
head(iris)
?plot  # Help for plot()
?plot  # Help for plot()
plot(iris$Species)  # Categorical variable
plot(iris$Petal.Length)  # Quantitative variable
plot(iris$Species, iris$Petal.Width)  # Cat x quant
plot(iris$Petal.Length, iris$Petal.Width)  # Quant pair
plot(iris)  # Entire data frame
?plot  # Help for plot()
plot(iris$Petal.Length, iris$Petal.Width,
col = "#cc0000",  # Hex code for datalab.cc red
pch = 19,         # Use solid circles for points
main = "Iris: Petal Length vs. Petal Width",
xlab = "Petal Length",
ylab = "Petal Width")
plot(iris$Petal.Length)  # Quantitative variable
plot(iris$Species, iris$Petal.Width)  # Cat x quant
plot(iris$Petal.Length, iris$Petal.Width)  # Quant pair
plot(iris$Species)  # Categorical variable
plot(iris$Species, iris$Petal.Width)  # Cat x quant
# Clear packages
detach("package:datasets", unload = TRUE)
# Clear plots
dev.off()  # But only if there IS a plot
# Clear console
cat("\014")  # ctrl+L
# Formula plot with options
plot(dnorm, -3, +3,
col = "#cc0000",
lwd = 5,
main = "Standard Normal Distribution",
xlab = "z-scores",
ylab = "Density")
cylinders <- table(mtcars$cyl)  # Create table
barplot(cylinders)              # Bar chart
plot(cylinders)
rm(list = ls())
# Clear packages
detach("package:datasets", unload = TRUE)  # For base
# Clear plots
dev.off()  # But only if there IS a plot
# Clear console
cat("\014")  # ctrl+L
# Clear mind :)
1+1
a = 1+1
a = 1+3
sam <- "sam"
x<- "sam"
x
vec1 = c(2,4,6,8,10)
vec2 = c(1,3,5,7,9,11)
vec1+vec2
vec2 = c(1,3,5,7,9)
vec1+vec2
vec1 <- c(2,4,6,8,10)
vec2 <- c(1,3,5,7,9)
vec1+vec2
vec4 <- as.factor(c('Fe',"m","g"))
v12 <- 5.5:7.5
v13 <- 5.5:5.6
v14 <- 5.5:10.5
v15 <-3.8:11.4
v16 <- c(1,2,3,4,5,6,7,8,9)
v17 <- c(9,8,7,6,5,4,3,2,1)
v16
v16 <- c(1,2,3,4,5,6,7,8,9,"a")
v16
?dnorm
v20 <- 20:12
v21 <- seq(1,5,10)
v21
v21 <- seq(1,10,10)
v21
v21 <- seq(1,10,2)
v14[1,2]
v14[1:2]
v14[1:3]
clear
clear()
distributions <- list(family="Thomas",
ppl = 5, place = "ahmedabad")
distributions[family]
distributions[[family]]
print(distributions)
distributions[["ppl"]]
y <- c[sam = 24,sharon = 27, shalin = 30]
y <- c(sam = 24,sharon = 27, shalin = 30)
y[sam]
y[24]
y
rm()
ls()
rm(list = ls(all=TRUE))
ls()
ls()
rm(list=ls(all=TRUE))
setwd("/Users/Somak/Desktop")
# R as calculator
7+10
67.1*11
5/7
# Vectors
c(5, 8, 100) + c(3, 1, 7)
# Vectors
v1 <-c(5, 8, 100) + c(3, 1, 7)
c(5, 7, 10)*c(2, 4, 3)
c(5, 8, 100) + c(3, 1)
c(5, 7, 10)*c(2, 4)
# Built-in Functions
1/sqrt(2*pi) * exp(-2)
dnorm(0)
# Built-in Help
help(dnorm)
help.search('normal distribution')
?dnorm
??'normal distribution'
??'normal distribut'
?dnom
help.search('normal distributin')
# Functions
log(10)
#Variable Names and Assignments
name<- "Vince"
height <- 66
height
name
height %/% 12 # integer division
height %% 12 # modulus
66%12
66 % 12
66/12
x <- c('apples', 'oranges', 'bananas')
x
print(x)
length(x)
typeof(x)
# Data Structures
x <- 5
x
typeof(x)
is.vector(x)
v23 <- "Sam"
j <- seq(100,10,-2)
j
j <- seq(100,10,2)
j <- seq(100,10,-2)
x[1:2]
x[c(2,4)]
# Indexing
x <- c('lions', 'tigers', 'bears', 'oh my!')
x
x[1]
x[length(x)]
x[-2]
x[1:2]
x[c(2,4)]
x[-(1:2)]
# Boolean Indexing
x<-c(1,5,7)
x[c(TRUE, FALSE, TRUE)]
student <- c("bob", "alice", "john", "mary")
gender <- c('M', 'F', 'M', 'F')
student[gender=='M']
gender=='M'
# Matrix
x <- matrix(1:9, nrow=3, ncol=3)
x
fruits %in% refrigerator
rm(list=ls(all=TRUE))
